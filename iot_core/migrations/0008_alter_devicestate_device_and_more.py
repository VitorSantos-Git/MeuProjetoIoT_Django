# Generated by Django 5.2.4 on 2025-07-19 16:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('iot_core', '0007_iotdevice_devicestate'),
    ]

    operations = [
        migrations.AlterField(
            model_name='devicestate',
            name='device',
            field=models.OneToOneField(help_text='O dispositivo IoT associado a este estado.', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='iot_core.dispositivo'),
        ),
        migrations.AlterModelOptions(
            name='comandopendente',
            options={'ordering': ['data_execucao_agendada'], 'verbose_name': 'Comando Pendente', 'verbose_name_plural': 'Comandos Pendentes'},
        ),
        migrations.RemoveField(
            model_name='airconditionerlog',
            name='device_id',
        ),
        migrations.RemoveField(
            model_name='comandopendente',
            name='data_agendamento',
        ),
        migrations.RemoveField(
            model_name='comandopendente',
            name='data_fim_repeticao',
        ),
        migrations.RemoveField(
            model_name='comandopendente',
            name='dias_da_semana',
        ),
        migrations.RemoveField(
            model_name='comandopendente',
            name='executado',
        ),
        migrations.RemoveField(
            model_name='comandopendente',
            name='master_command_id',
        ),
        migrations.RemoveField(
            model_name='comandopendente',
            name='parametros',
        ),
        migrations.RemoveField(
            model_name='leiturasensor',
            name='temperatura',
        ),
        migrations.RemoveField(
            model_name='leiturasensor',
            name='umidade',
        ),
        migrations.AddField(
            model_name='airconditionerlog',
            name='device_name',
            field=models.CharField(blank=True, help_text='Nome do dispositivo IoT (ex: Ar Sala, Ar Quarto)', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='comandopendente',
            name='repetitive_command_id',
            field=models.CharField(blank=True, help_text='ID único para comandos repetitivos mestre.', max_length=100, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='comandopendente',
            name='status',
            field=models.CharField(choices=[('AGENDADO', 'Agendado'), ('EXECUTADO', 'Executado'), ('FALHOU', 'Falhou'), ('ATRASADO', 'Atrasado/Não Executado')], default='AGENDADO', help_text='Status atual do comando.', max_length=10),
        ),
        migrations.AddField(
            model_name='leiturasensor',
            name='tipo_sensor',
            field=models.CharField(blank=True, help_text="Tipo de sensor (ex: 'Temperatura', 'Umidade', 'Luminosidade').", max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='leiturasensor',
            name='unidade',
            field=models.CharField(blank=True, help_text="Unidade da leitura (ex: '°C', '%', 'lux').", max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='leiturasensor',
            name='valor',
            field=models.FloatField(blank=True, help_text='Valor lido pelo sensor.', null=True),
        ),
        migrations.AlterField(
            model_name='comandopendente',
            name='comando',
            field=models.CharField(help_text="O comando a ser enviado (ex: 'BUZZER_ON', 'LED_OFF', 'RELE_ON', 'RELE_OFF').", max_length=50),
        ),
        migrations.AlterField(
            model_name='comandopendente',
            name='data_execucao_agendada',
            field=models.DateTimeField(help_text='Data e hora em que o comando deve ser executado.'),
        ),
        migrations.AlterField(
            model_name='comandopendente',
            name='data_execucao_real',
            field=models.DateTimeField(blank=True, help_text='Data e hora real da execução do comando.', null=True),
        ),
        migrations.AlterField(
            model_name='comandopendente',
            name='dispositivo',
            field=models.ForeignKey(help_text='O dispositivo para o qual o comando é destinado.', on_delete=django.db.models.deletion.CASCADE, to='iot_core.dispositivo'),
        ),
        migrations.AlterField(
            model_name='comandopendente',
            name='is_master_repetitive',
            field=models.BooleanField(default=False, help_text='Indica se é um comando mestre para repetição (visível no Admin).'),
        ),
        migrations.AlterField(
            model_name='comandopendente',
            name='tipo_repeticao',
            field=models.CharField(choices=[('NENHUM', 'Nenhum'), ('DIARIO', 'Diário'), ('SEMANAL', 'Semanal')], default='NENHUM', help_text='Tipo de repetição do comando.', max_length=10),
        ),
        migrations.AlterField(
            model_name='leiturasensor',
            name='dispositivo',
            field=models.ForeignKey(help_text='O dispositivo que enviou a leitura.', on_delete=django.db.models.deletion.CASCADE, to='iot_core.dispositivo'),
        ),
        migrations.AlterField(
            model_name='leiturasensor',
            name='timestamp',
            field=models.DateTimeField(auto_now_add=True, help_text='Data e hora da leitura.'),
        ),
        migrations.DeleteModel(
            name='IotDevice',
        ),
    ]
